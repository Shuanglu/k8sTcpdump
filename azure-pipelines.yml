trigger: 
 - main
 - containerTcpdump

pool:
   vmImage: 'ubuntu-latest'

steps: 
- task: GoTool@0
  displayName: 'Golang version'
  inputs:
    version: '1.13.5'
- task: Go@0
  inputs:
    command: 'get'
    arguments: '-d'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
- task: CmdLine@2
  displayName: 'Download UPX'
  inputs:
    script: 'wget https://github.com/upx/upx/releases/download/v3.96/upx-3.96-amd64_linux.tar.xz && tar -xvf ./upx-3.96-amd64_linux.tar.xz'
- task: Go@0
  displayName: 'Build binary'
  inputs:
    command: 'build'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    arguments: '-o "$(System.DefaultWorkingDirectory)/k8stcpdump" -ldflags="-s -w"'
- task: CmdLine@2
  displayName: 'Compress the binary with UPX'
  inputs:
    script: './upx-3.96-amd64_linux/upx --brute $(System.DefaultWorkingDirectory)/k8stcpdump'
- task: CopyFiles@2
  inputs:
    Contents: $(System.DefaultWorkingDirectory)/k8stcpdump
    TargetFolder: '$(Build.ArtifactStagingDirectory)/k8stcpdump'
- task: PublishBuildArtifacts@1
  inputs:
     artifactName: k8stcpdump
- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'ADO_k8stcpdump'
    repositoryName: 'Shuanglu/k8sTcpdump'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'userSpecifiedTag'
    tag: '$(Build.BuildNumber)'
    assets: $(System.DefaultWorkingDirectory)/k8stcpdump
    isPreRelease: true